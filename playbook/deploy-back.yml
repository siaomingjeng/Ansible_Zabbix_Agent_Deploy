################  Function Introduction of the Playbook  ######################
###:      yum repo installation  
###:      yum install zabbix-agent zabbix-sender sysstat (iptables-services)
###:      mkdir /etc/zabbix/scripts 
###:      chmod 755, chown zabbix.zabbix
###:      generate .conf   using template
###:      add rules into iptables allow port 10050
###:      SELinux open these two ports (ignored this time)
###############################################################################

---
- hosts: ALL1        #specify a group of hosts to apply the following tasks.
  remote_user: root
  gather_facts: yes    #gather the infomation of remote host

#  vars:                 #self-defined variables
#  - server_ip: "10.0.194.40"     ##### Zabbix Server IP Address#####

  tasks:
  - name: "Install yum source repo of Zabbix 2.4(.8)!"    #For human reading
    copy: src=zabbix.repo dest=/etc/yum.repos.d/ owner=root 

  - name: "Install zabbix-agent using Yum!"
    yum: name={{ item }} state=present
    with_items:        #list the items to be installed in order
    - zabbix-agent
    - zabbix-sender
    - sysstat
    - iptables-services

  - name: "Create folder: /etc/zabbix/scripts!" #this folder is used for storingzabbix scripts
    file: path=/etc/zabbix/scripts owner=zabbix group=zabbix state=directory mode=0755 

  - name: "Copy files: scripts and tmp files!"
    copy: src={{ item.src }} dest=/etc/zabbix/scripts/ owner=zabbix group=zabbix mode={{ item.mode }}
    with_items:
    - {src:'scripts/',mode:0755}
    - {src:'tmp/',mode:0666}

  - name: "Prepare files for ceph!"
    copy: src=ceph/ dest=/etc/zabbix/scripts/ owner=zabbix group=zabbix mode=0755
    when: '"ceph1" in group_names or "ceph2" in group_names'

  - name: "Copy files (thread.py, top.py, processexist.sh) to the remote agents!"
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: zabbix
      mode: 0755
      group: zabbix
    with_items:
    - { src: "thread.sh", dest: "/etc/zabbix/scripts/thread.sh" }
    - { src: "top.sh", dest: "/etc/zabbix/scripts/top.sh" }
    - { src: "processexist.sh", dest: "/etc/zabbix/scripts/processexist.sh" }
    - { src: "serviceexist.sh", dest: "/etc/zabbix/scripts/serviceexist.sh" }

  - name: "Configure Zabbix on OpenStack: /etc/zabbix/zabbix_agentd.conf"
    template: src=zabbix_openstack_cnf.j2 dest=/etc/zabbix/zabbix_agentd.conf
    when: '"controller" in group_names or "compute" in group_names' 
    notify:       #call 'handler' when needed
    - restart zabbix-agent  # 'name' in 'handler'


  - name: "Configure Zabbix on Ceph: /etc/zabbix/zabbix_agentd.conf"
    template: src=zabbix_ceph_cnf.j2 dest=/etc/zabbix/zabbix_agentd.conf
    when: '"ceph" in group_names'
    notify:       #call 'handler' when needed
    - restart zabbix-agent  # 'name' in 'handler'


  - name: "Ensure zabbix-agent is running and enabled!"
    service: name=zabbix-agent state=started enabled=yes

##########  iptables: set pass for 10050 used by zabbix-agent  ##########

  - name: check iptables about port 10050
    shell: iptables -S |grep "\-A INPUT \-p tcp \-m tcp \-\-dport 10050 \-j ACCEPT"|wc -l
    register: iptables_10050

  - name: "For port 10050: iptables -I $opt -p tcp --dport $port -j ACCEPT!"
    command: iptables -I {{ item[0].method }} -p {{ item[1] }} --{{ item[0].direct }}port 10050 -j ACCEPT
    when: iptables_10050.stdout == '0'
    with_nested:     #nested loops
    - [{method: "INPUT", direct: d}, {method: "OUTPUT", direct: s} ]
    - [ 'tcp' ]

  - name: "Save iptables to /etc/sysconfig/iptables!"
    shell: iptables-save > /etc/sysconfig/iptables
    when: iptables_10050.stdout == '0'

  - name: "Ensure iptables is running and enabled!"
    service: name=iptables state=started enabled=yes

  handlers:
  - name: restart zabbix-agent
    service: name=zabbix-agent state=restarted

